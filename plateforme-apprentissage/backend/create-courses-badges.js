const mongoose = require('mongoose');
const User = require('./models/User');
const Cours = require('./models/Cours');
const Badge = require('./models/Badge');
require('dotenv').config();

// Connexion √† MongoDB
const connectDB = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/plateforme-apprentissage');
    console.log('MongoDB connect√©');
  } catch (error) {
    console.error('Erreur de connexion MongoDB:', error);
    process.exit(1);
  }
};

// Cr√©er des cours et badges de test
const createCoursesAndBadges = async () => {
  try {
    await connectDB();

    // Trouver un formateur (ou cr√©er un formateur de test)
    let formateur = await User.findOne({ role: 'formateur' });
    if (!formateur) {
      // Cr√©er un formateur de test
      const bcrypt = require('bcryptjs');
      const salt = await bcrypt.genSalt(10);
      const hashedPassword = await bcrypt.hash('formateur123', salt);
      
      formateur = new User({
        nom: 'Jean Formateur',
        email: 'formateur@plateforme.com',
        password: hashedPassword,
        role: 'formateur',
        telephone: '+221 77 987 65 43',
        bio: 'Formateur exp√©riment√© en d√©veloppement web et m√©canique',
        competences: ['JavaScript', 'React', 'Node.js', 'M√©canique automobile'],
        langues: ['Fran√ßais', 'Anglais'],
        statut: 'actif'
      });
      await formateur.save();
      console.log('‚úÖ Formateur cr√©√©: formateur@plateforme.com / formateur123');
    }

    // Donn√©es des cours
    const coursData = [
      {
        titre: 'Introduction au D√©veloppement Web',
        description: 'Apprenez les bases du d√©veloppement web avec HTML, CSS et JavaScript',
        categorie: 'informatique',
        niveau: 'd√©butant',
        langue: 'fr',
        tags: ['html', 'css', 'javascript', 'web'],
        prerequis: ['Connaissances de base en informatique'],
        objectifs: [
          'Comprendre la structure HTML',
          'Styliser avec CSS',
          'Ajouter de l\'interactivit√© avec JavaScript',
          'Cr√©er une page web compl√®te'
        ],
        estPublic: true,
        estApprouve: true,
        statutModeration: 'approuve',
        etapes: [
          {
            titre: 'Introduction √† HTML',
            description: 'D√©couvrez les balises HTML de base',
            contenu: {
              texte: 'HTML (HyperText Markup Language) est le langage de balisage standard pour cr√©er des pages web...',
              images: ['html-structure.jpg']
            },
            dureeEstimee: 30,
            ordre: 1
          },
          {
            titre: 'Stylisation avec CSS',
            description: 'Apprenez √† styliser vos pages web',
            contenu: {
              texte: 'CSS (Cascading Style Sheets) permet de styliser et de mettre en forme vos pages HTML...',
              images: ['css-example.jpg']
            },
            dureeEstimee: 45,
            ordre: 2
          },
          {
            titre: 'Interactivit√© avec JavaScript',
            description: 'Ajoutez de l\'interactivit√© √† vos pages',
            contenu: {
              texte: 'JavaScript est un langage de programmation qui permet d\'ajouter de l\'interactivit√©...',
              images: ['js-example.jpg']
            },
            dureeEstimee: 60,
            ordre: 3
          }
        ]
      },
      {
        titre: 'M√©canique Automobile - Niveau D√©butant',
        description: 'Apprenez les bases de la m√©canique automobile',
        categorie: 'mecanique',
        niveau: 'd√©butant',
        langue: 'fr',
        tags: ['m√©canique', 'automobile', 'moteur', 'entretien'],
        prerequis: ['Aucun pr√©requis'],
        objectifs: [
          'Comprendre le fonctionnement d\'un moteur',
          'Effectuer la vidange',
          'Changer les plaquettes de frein',
          'Diagnostiquer les pannes courantes'
        ],
        estPublic: true,
        estApprouve: true,
        statutModeration: 'approuve',
        etapes: [
          {
            titre: 'Fonctionnement du moteur',
            description: 'Comprendre les bases du moteur √† combustion',
            contenu: {
              texte: 'Un moteur √† combustion interne fonctionne selon le principe des quatre temps...',
              images: ['moteur-4temps.jpg'],
              video: 'moteur-fonctionnement.mp4'
            },
            dureeEstimee: 40,
            ordre: 1
          },
          {
            titre: 'Vidange moteur',
            description: 'Apprendre √† faire la vidange',
            contenu: {
              texte: 'La vidange est une op√©ration d\'entretien essentielle pour pr√©server votre moteur...',
              images: ['vidange-etapes.jpg'],
              video: 'vidange-tutorial.mp4'
            },
            dureeEstimee: 35,
            ordre: 2
          }
        ]
      },
      {
        titre: 'Couture - Techniques de Base',
        description: 'Ma√Ætrisez les techniques fondamentales de la couture',
        categorie: 'couture',
        niveau: 'd√©butant',
        langue: 'fr',
        tags: ['couture', 'textile', 'machine', 'patron'],
        prerequis: ['Aucun pr√©requis'],
        objectifs: [
          'Utiliser une machine √† coudre',
          'Lire un patron',
          'R√©aliser des coutures droites',
          'Coudre un v√™tement simple'
        ],
        estPublic: true,
        estApprouve: true,
        statutModeration: 'approuve',
        etapes: [
          {
            titre: 'Prise en main de la machine',
            description: 'Apprendre √† utiliser une machine √† coudre',
            contenu: {
              texte: 'Une machine √† coudre est compos√©e de plusieurs √©l√©ments essentiels...',
              images: ['machine-couture.jpg'],
              video: 'machine-tutorial.mp4'
            },
            dureeEstimee: 25,
            ordre: 1
          },
          {
            titre: 'Lecture de patron',
            description: 'Comprendre et utiliser les patrons de couture',
            contenu: {
              texte: 'Un patron de couture est un mod√®le en papier qui sert de guide...',
              images: ['patron-exemple.jpg']
            },
            dureeEstimee: 30,
            ordre: 2
          }
        ]
      }
    ];

    // Cr√©er les cours
    const coursCreated = [];
    for (const coursInfo of coursData) {
      const existingCours = await Cours.findOne({ titre: coursInfo.titre });
      if (!existingCours) {
        const cours = new Cours({
          ...coursInfo,
          formateur: formateur._id
        });
        await cours.save();
        coursCreated.push(cours);
        console.log(`‚úÖ Cours cr√©√©: ${cours.titre}`);
      } else {
        coursCreated.push(existingCours);
        console.log(`‚ÑπÔ∏è  Cours existe d√©j√†: ${existingCours.titre}`);
      }
    }

    // Donn√©es des badges
    const badgeData = [
      {
        nom: 'D√©veloppeur Web D√©butant',
        description: 'Badge obtenu apr√®s avoir compl√©t√© le cours d\'introduction au d√©veloppement web',
        image: 'badge-web-debutant.png',
        niveau: 'bronze',
        competencesValidees: ['HTML', 'CSS', 'JavaScript'],
        criteresObtention: 'Compl√©ter toutes les √©tapes du cours et r√©ussir le quiz final avec 80% minimum',
        estActif: true,
        estValide: true
      },
      {
        nom: 'M√©canicien Automobile Novice',
        description: 'Badge obtenu apr√®s avoir ma√Ætris√© les bases de la m√©canique automobile',
        image: 'badge-mecanique-novice.png',
        niveau: 'bronze',
        competencesValidees: ['Vidange moteur', 'Diagnostic de base', 'Entretien pr√©ventif'],
        criteresObtention: 'Compl√©ter le cours de m√©canique et d√©montrer les comp√©tences pratiques',
        estActif: true,
        estValide: true
      },
      {
        nom: 'Couturier D√©butant',
        description: 'Badge obtenu apr√®s avoir appris les techniques de base de la couture',
        image: 'badge-couture-debutant.png',
        niveau: 'bronze',
        competencesValidees: ['Machine √† coudre', 'Lecture de patron', 'Coutures droites'],
        criteresObtention: 'R√©aliser un projet de couture simple et ma√Ætriser les techniques de base',
        estActif: true,
        estValide: true
      },
      {
        nom: 'Expert D√©veloppement Web',
        description: 'Badge avanc√© pour les d√©veloppeurs web exp√©riment√©s',
        image: 'badge-web-expert.png',
        niveau: 'or',
        competencesValidees: ['React', 'Node.js', 'Base de donn√©es', 'API REST'],
        criteresObtention: 'Compl√©ter plusieurs cours avanc√©s et r√©aliser un projet complet',
        estActif: true,
        estValide: true
      }
    ];

    // Cr√©er les badges
    for (let i = 0; i < badgeData.length; i++) {
      const badgeInfo = badgeData[i];
      const existingBadge = await Badge.findOne({ nom: badgeInfo.nom });
      
      if (!existingBadge) {
        const badge = new Badge({
          ...badgeInfo,
          cours: coursCreated[i % coursCreated.length]._id // Associer aux cours cr√©√©s
        });
        
        // G√©n√©rer un QR code
        await badge.genererQRCode();
        
        console.log(`‚úÖ Badge cr√©√©: ${badge.nom}`);
      } else {
        console.log(`‚ÑπÔ∏è  Badge existe d√©j√†: ${existingBadge.nom}`);
      }
    }

    console.log('\nüéâ Cr√©ation des cours et badges termin√©e !');
    console.log('\nüìö Cours disponibles:');
    const allCours = await Cours.find().populate('formateur', 'nom email');
    allCours.forEach(cours => {
      console.log(`- ${cours.titre} (${cours.categorie}) - ${cours.etapes.length} √©tapes`);
    });

    console.log('\nüèÜ Badges disponibles:');
    const allBadges = await Badge.find().populate('cours', 'titre');
    allBadges.forEach(badge => {
      console.log(`- ${badge.nom} (${badge.niveau}) - Cours: ${badge.cours.titre}`);
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation:', error);
  } finally {
    mongoose.connection.close();
  }
};

// Ex√©cuter le script
createCoursesAndBadges();
